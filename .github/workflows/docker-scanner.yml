name: Docker Scanner CI/CD

on:
  workflow_dispatch

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: 🔥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐳 Ensure Docker is Running
        run: |
          echo "🔹 Checking Docker status..."
          sudo systemctl start docker
          sleep 5
          docker info

      - name: 🐳 Find and Load Uploaded Docker Image
        id: load_image
        run: |
          UPLOADED_FILE=$(ls uploaded_images/*.tar | head -n 1 || echo "")
          if [ -z "$UPLOADED_FILE" ]; then
            echo "🚨 ERROR: No Docker image tar file found!"
            exit 1
          fi
          echo "✅ Found uploaded Docker image: $UPLOADED_FILE"
          docker load -i "$UPLOADED_FILE"

          # Extract the loaded image name
          IMAGE_NAME=$(docker images --format "{{.Repository}}:{{.Tag}}" | head -n 1)
          if [ -z "$IMAGE_NAME" ]; then
            echo "🚨 ERROR: Could not determine image name after loading!"
            exit 1
          fi

          echo "✅ Extracted image name: $IMAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: 🔍 Scan with Trivy
        run: |
          echo "🔹 Running Trivy scan on $IMAGE_NAME..."
          docker run --rm aquasec/trivy image "$IMAGE_NAME" > trivy-report.txt || echo "⚠️ Trivy scan failed!"

      - name: 🔍 Scan with Grype
        run: |
          echo "🔹 Running Grype scan on $IMAGE_NAME..."
          docker run --rm anchore/grype "$IMAGE_NAME" > grype-report.txt || echo "⚠️ Grype scan failed!"

      - name: 📤 Upload Scan Reports as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Scanner Reports
          path: |
            trivy-report.txt
            grype-report.txt

  store-in-db:
    runs-on: ubuntu-latest
    needs: scan

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: docker_management
          MYSQL_USER: flask_user
          MYSQL_PASSWORD: Abhiram@1729
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --host=localhost --user=flask_user --password=Abhiram@1729"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: 🔥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📥 Download Scan Reports
        uses: actions/download-artifact@v4
        with:
          name: Scanner Reports

      - name: 🔍 Verify Scan Reports Exist
        run: |
          ls -lah
          if [ ! -f "trivy-report.txt" ] || [ ! -f "grype-report.txt" ]; then
            echo "❌ ERROR: Scan reports are missing!"
            exit 1
          else
            echo "✅ Scan reports found!"
          fi

      - name: 🛠 Install MySQL Connector
        run: |
          python -m pip install --upgrade pip
          pip install mysql-connector-python

      - name: 🗄 Wait for MySQL to Be Ready
        run: |
          for i in {1..30}; do
            if mysql -h 127.0.0.1 -u flask_user -pAbhiram@1729 -e "SELECT 1"; then
              echo "✅ MySQL is ready!"
              break
            fi
            echo "⏳ Waiting for MySQL..."
            sleep 2
          done

      - name: 🗄 Store Scan Data in MySQL
        run: python insert_scan_report.py
