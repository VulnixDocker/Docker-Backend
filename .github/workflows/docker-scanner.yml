name: Docker Scanner CI/CD

on:
  workflow_dispatch:
    inputs:
      docker_image:
        description: "Docker Image to Scan"
        required: true
        type: string

jobs:
  scan:
    runs-on: ubuntu-latest

    steps:
      - name: 🔥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🐳 Ensure Docker Daemon is Running
        run: |
          echo "🔹 Checking Docker status..."
          sudo systemctl start docker
          sleep 5
          docker info || (echo "🚨 ERROR: Docker is not running!" && exit 1)

      - name: 🔍 Verify the Docker Image is Available
        run: |
          IMAGE_NAME="${{ github.event.inputs.docker_image }}"
          if [ -z "$IMAGE_NAME" ]; then
            echo "🚨 ERROR: No Docker image provided!"
            exit 1
          fi

          # 🔹 Check if image exists locally
          if docker images "$IMAGE_NAME" | grep -q "$IMAGE_NAME"; then
            echo "✅ Using Local Docker Image: $IMAGE_NAME"
          else
            echo "❌ ERROR: Image $IMAGE_NAME not found locally!"
            exit 1
          fi

      - name: 🔍 Scan with Trivy
        run: |
          IMAGE="${{ github.event.inputs.docker_image }}"
          echo "🔹 Running Trivy scan on $IMAGE..."
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image "$IMAGE" > "scan_reports/trivy-${IMAGE//[:\/]/_}.txt"
          echo "✅ Trivy report saved: scan_reports/trivy-${IMAGE//[:\/]/_}.txt"

      - name: 📤 Upload Scan Reports as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Scanner Reports
          path: scan_reports/*.txt


  store-in-db:
    runs-on: ubuntu-latest
    needs: scan

    steps:
      - name: 🔥 Checkout Repository
        uses: actions/checkout@v4

      - name: 📥 Download Scan Reports
        uses: actions/download-artifact@v4
        with:
          name: Scanner Reports
          path: scan_reports

      - name: 🔍 Verify Scan Reports Exist
        run: |
          echo "🔹 Checking for scan reports..."
          if [ -z "$(ls -A scan_reports/)" ]; then
            echo "❌ ERROR: scan_reports directory is empty!"
            exit 1
          fi
          ls -lah scan_reports/

      - name: 🛠 Install MySQL Connector
        run: |
          python -m pip install --upgrade pip
          pip install mysql-connector-python

      - name: 🗄 Store Scan Data in Local MySQL
        run: python insert_scan_report.py
