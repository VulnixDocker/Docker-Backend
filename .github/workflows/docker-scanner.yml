name: Docker Scanner CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      docker_image:
        description: "Docker Image to Scan"
        required: true
        type: string

jobs:
  build_and_scan:
    runs-on: self-hosted  # Ensure self-hosted runner is used

    steps:
      - name: 🔥 Checkout Code
        uses: actions/checkout@v3

      - name: 🐳 Ensure Docker Daemon is Running
        run: |
          echo "🔹 Checking Docker status..."
          sudo systemctl start docker || echo "🚨 Docker already running!"
          docker info || (echo "🚨 ERROR: Docker is not running!" && exit 1)

      - name: 📂 Verify Uploaded Docker Image
        run: |
          echo "📂 Checking uploaded images..."
          ls -lah uploaded_images/ || echo "❌ ERROR: Directory missing!"

      - name: 🏗️ Load & Tag Uploaded Docker Image
        run: |
          UPLOADED_FILE=$(ls uploaded_images/*.tar 2>/dev/null | head -n 1)

          if [ -z "$UPLOADED_FILE" ]; then
            echo "🚨 ERROR: No Docker image tar file found!"
            exit 1
          fi

          echo "✅ Found uploaded Docker image: $UPLOADED_FILE"
          docker load -i "$UPLOADED_FILE"

          # Extract image name from tar
          IMAGE_NAME=$(docker images --format "{{.Repository}}:{{.Tag}}" | grep -v '<none>' | head -n 1)

          if [ -z "$IMAGE_NAME" ]; then
            echo "🚨 ERROR: Unable to extract image name!"
            exit 1
          fi

          echo "✅ Image Loaded: $IMAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

      - name: 🔍 Scan Uploaded Image with Trivy
        run: |
          mkdir -p scan_reports
          echo "🔹 Running Trivy scan on $IMAGE_NAME..."
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image "$IMAGE_NAME" > "scan_reports/trivy-${IMAGE_NAME//[:\/]/_}.txt"
          echo "✅ Trivy report saved: scan_reports/trivy-${IMAGE_NAME//[:\/]/_}.txt"

      - name: 📤 Upload Scan Reports
        uses: actions/upload-artifact@v3
        with:
          name: Scanner Reports
          path: scan_reports/*.txt

      - name: 🔑 Log in & Push to Docker Hub
        if: success()
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

          TAGGED_IMAGE="${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.inputs.docker_image }}:latest"

          echo "✅ Tagging Image: $TAGGED_IMAGE"
          docker tag $IMAGE_NAME $TAGGED_IMAGE

          echo "🚀 Pushing Image to Docker Hub..."
          docker push $TAGGED_IMAGE
          echo "✅ Image pushed to Docker Hub: $TAGGED_IMAGE"
