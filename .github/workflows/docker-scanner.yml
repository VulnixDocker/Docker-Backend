name: Docker Scanner CI/CD

on:
  workflow_dispatch:
    inputs:
      docker_image:
        description: "Docker image to scan"
        required: true

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: 🔥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🛠 Verify Docker Image Input
        run: |
          if [[ -z "${{ github.event.inputs.docker_image }}" ]]; then
            echo "🚨 ERROR: No Docker image specified!"
            exit 1
          else
            echo "✅ Docker image to scan: ${{ github.event.inputs.docker_image }}"
          fi

      - name: 🔍 Scan with Trivy
        run: |
          IMAGE_NAME="${{ github.event.inputs.docker_image }}"
          docker pull "$IMAGE_NAME"
          docker run --rm aquasec/trivy image "$IMAGE_NAME" > trivy-report.txt

      - name: 🔍 Scan with Grype
        run: |
          IMAGE_NAME="${{ github.event.inputs.docker_image }}"
          docker run --rm anchore/grype "$IMAGE_NAME" > grype-report.txt

      - name: 📤 Upload Scan Reports
        uses: actions/upload-artifact@v3
        with:
          name: Scanner Reports
          path: |
            trivy-report.txt
            grype-report.txt

  store-in-db:
    runs-on: ubuntu-latest
    needs: scan
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: docker_management
          MYSQL_USER: flask_user
          MYSQL_PASSWORD: Abhiram@1729
        ports:
          - 3306:3306

    steps:
      - name: 🔥 Checkout Repository
        uses: actions/checkout@v3

      - name: 📥 Download Scan Reports
        uses: actions/download-artifact@v3
        with:
          name: Scanner Reports

      - name: Install MySQL Connector
        run: pip install mysql-connector-python

      - name: 🗄 Store Scan Data in MySQL
        run: python insert_scan_report.py
